{"version":3,"sources":["scripts/main.js"],"names":["rows","columns","gameField","score","cellScoreLimit","startButton","document","querySelector","messageStart","winMessage","loseMessage","gameScore","setNewGame","resetGameField","newFieldGeneretion","r","Math","floor","random","c","newField","getElementById","toString","valueNum","innerText","isEmptyCell","fieldCell","querySelectorAll","cell","classList","value","add","slideUp","row","shift","updateCell","slideDown","reverse","slideRight","slideLeft","filterZero","i","length","push","num","isWinner","filter","remove","isLose","checkPossibleMovHorizontaly","isMergingRow","checkPossibleMovVerticaly","arr","result","forEach","b","some","el","addEventListener","innerHTML","replace","e","code"],"mappings":"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","file":"main.c5580e84.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst rows = 4;\nconst columns = 4;\nlet gameField = [];\nlet score = 0;\nconst cellScoreLimit = 2048;\n\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\n\n/* event for start or restart button */\nstartButton.addEventListener('click', () => {\n  if (startButton.innerHTML === 'Start') {\n    messageStart.classList.add('hidden');\n    setNewGame();\n  } else {\n    resetGameField();\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n    startButton.classList.replace('restart', 'start');\n    startButton.innerHTML = 'Start';\n    score = 0;\n    gameScore.innerText = score;\n  }\n});\n\n/* events for arrow buttons */\ndocument.addEventListener('keyup', (e) => {\n  if (score === 0) {\n    startButton.classList.replace('start', 'restart');\n    startButton.innerHTML = 'Restart';\n  }\n\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    newFieldGeneretion();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    newFieldGeneretion();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    newFieldGeneretion();\n  } else if (e.code === 'ArrowDown') {\n\n    slideDown();\n    newFieldGeneretion();\n  }\n  gameScore.innerText = score;\n\n  if (!checkPossibleMovVerticaly() && !checkPossibleMovHorizontaly()\n   && !isEmptyCell()) {\n    isLose();\n\n    // eslint-disable-next-line no-useless-return\n    return;\n  }\n});\n\n/* set new game */\nfunction setNewGame() {\n  resetGameField();\n  newFieldGeneretion();\n  newFieldGeneretion();\n}\n\n/* new field generation */\nfunction newFieldGeneretion() {\n  const r = Math.floor(Math.random() * rows);\n  const c = Math.floor(Math.random() * columns);\n\n  if (gameField[r][c] === 0) {\n    const newField = document.getElementById(r.toString()\n       + '-' + c.toString());\n\n    const valueNum = Math.random();\n\n    if (valueNum < 0.9) {\n      newField.innerText = '2';\n    } else {\n      newField.innerText = '4';\n    }\n    gameField[r][c] = +newField.innerText;\n\n    // eslint-disable-next-line no-useless-return\n    return;\n  } else {\n    if (!isEmptyCell()) {\n      return;\n    }\n\n    newFieldGeneretion();\n  }\n}\n\n/* reset game field */\nfunction resetGameField() {\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  const fieldCell = document.querySelectorAll('.field-cell');\n\n  for (const cell of fieldCell) {\n    cell.innerText = '';\n    cell.classList.value = '';\n    cell.classList.add('field-cell');\n  }\n}\n\n/* directions of moving for game field */\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [gameField[0][c], gameField[1][c],\n      gameField[2][c], gameField[3][c]];\n\n    row = shift(row);\n\n    for (let r = 0; r < rows; r++) {\n      gameField[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [gameField[0][c], gameField[1][c],\n      gameField[2][c], gameField[3][c]];\n\n    row.reverse();\n    row = shift(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      gameField[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = gameField[r];\n\n    row.reverse();\n    row = shift(row);\n    row.reverse();\n    gameField[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = gameField[r];\n\n    row = shift(row);\n    gameField[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\n/* moving of game field */\nfunction shift(r) {\n  let row = filterZero(r);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\n/* changes game field after each moving */\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num;\n\n    if (num < cellScoreLimit) {\n      cell.classList.add('field-cell' + '--' + +num.toString());\n    } else {\n      cell.classList.add('field-cell--2048');\n      isWinner();\n    }\n  }\n}\n\nfunction filterZero(row) {\n  return row.filter(r => r);\n}\n\n/* check game field for empty cells */\nfunction isEmptyCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gameField[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/* appear winner message */\nfunction isWinner() {\n  winMessage.classList.remove('hidden');\n}\n\n/* appear lose message */\nfunction isLose() {\n  loseMessage.classList.remove('hidden');\n}\n\n/* check possible of horizontal moving */\nfunction checkPossibleMovHorizontaly() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gameField[r][c] === gameField[r][c + 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/* merging of two rows */\nfunction isMergingRow(r) {\n  const row = filterZero(r);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* check possible of vertical moving */\nfunction checkPossibleMovVerticaly() {\n  const arr = [];\n  const result = [];\n\n  for (let c = 0; c < columns; c++) {\n    arr.push([gameField[0][c], gameField[1][c],\n      gameField[2][c], gameField[3][c]]);\n  }\n\n  arr.forEach(b => result.push(isMergingRow(b)));\n\n  return result.some(el => el);\n}\n"]}